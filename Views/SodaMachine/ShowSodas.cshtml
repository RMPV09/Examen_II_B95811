@model Examen_II_B95811.Models.ViewModel
@{
    ViewData["Title"] = "Index";
}

<!DOCTYPE html>
<html>
    @using System.Text.Json;
<head>

    <meta name="viewport" content="width=device-width" />

    <title>how to display message using viewbag in mvc.</title>

</head>
<body>
    <h1>Welcome to the vending machine!</h1>
    <h3> These are the currently available sodas</h3>
    <div>
        <table class=" table">
            <thead>
                <tr>
                    <th>Item number</th>
                    <th>Soda name</th>
                    <th>Cans availabe</th>
                    <th>Price of soda</th>
                </tr>
            </thead>
            <tbody>
                @for(int index = 0; index < Model.SodaList.Count; index++)
                {
                    <tr>
                        <td>@(index+1)</td>
                        <td>@Model.SodaList.ElementAtOrDefault(index).Name</td>
                        <td>@Model.SodaList.ElementAtOrDefault(index).CansAvailable</td>
                        <td>@Model.SodaList.ElementAtOrDefault(index).Currency @Model.SodaList.ElementAtOrDefault(index).PriceOfCan</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    @using (Html.BeginForm("PlaceOrder", "SodaMachine", FormMethod.Post, new { enctype ="multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        <h4>Type in the name and amount of cans of the soda of your choice</h4>
        <div class="form-horizontal">
            <div class="form-group">
                @Html.LabelFor(model => model.ASoda.Name)
                @Html.TextBoxFor(model => model.ASoda.Name, new { @placeholder = "Please, type in the soda's name, Ex: Coca Cola",@class = "form-control", @id = "NameOfSoda"})
                @Html.ValidationMessageFor(model => model.ASoda.Name, "", new { @class="text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.ASoda.CansAvailable)
                @Html.TextBoxFor(model => model.ASoda.CansAvailable, new { @placeholder = "Please, type in the soda's name",@class = "form-control" , @id = "CansOfSoda"})
                @Html.ValidationMessageFor(model => model.ASoda.CansAvailable, "", new { @class="text-danger" })
            <br>
            <br>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.ASoda.PriceOfCan, new { style = "display: none;" })
                @Html.TextBoxFor(model => model.ASoda.PriceOfCan, new { @placeholder = "Please, type in the soda's name",@class = "form-control" , @id = "PriceOfSoda", style = "display: none;" })
                @Html.ValidationMessageFor(model => model.ASoda.PriceOfCan, "", new { @class="text-danger" })
            <br>
            <br>
            </div>
                <p>Total cost: ¢<span id="totalCost"></span> <br /></p>
                <input type="submit" class="btn btn-success" value="Buy" />
            </div>
    }
    @if (ViewBag.Message != null)  
    {  
        <script type="text/javascript">  
            window.onload = function () {  
                alert("@ViewBag.Message");  
            };  
        </script>  
    } 
    <script>
            var json = JsonSerializer.Serialize(Model.SodaList);
            var totalCostElement = document.getElementById("totalCost");
            var mySodaCansElement = document.getElementById("CansOfSoda");
            var mySodaPriceElement = document.getElementById("PriceOfSoda");
            var mySodaNameElement = document.getElementById("NameOfSoda");
            var result = [];
            for(var i in json_data) 
            {
                result.push([i, json [i]]);
            }
        function try1()
        {
                console.log("Value of result", typeOf(result))
                for(var index = 0; index < result.length; index++)
                {
                    console.log("Value of result", typeOf(result[i]))

                    if (result[i] == mySodaNameElement.Value) 
                    {
                        mySodaPriceElement.value = Model.SodaList.ElementAtOrDefault(index).PriceOfCan
                    }
                }
            totalCostElement.innerText = (125 * mySodaCansElement.value);
        }
        mySodaCansElement.onchange = try1;
    </script>
    

</body>

</html>

